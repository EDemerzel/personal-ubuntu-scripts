{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Shellcheck All Scripts",
      "type": "shell",
      "command": "find",
      "args": [
        ".",
        "-name",
        "*.sh",
        "-exec",
        "shellcheck",
        "{}",
        "\\;"
      ],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": {
        "owner": "shellcheck",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^In (.+) line (\\d+):$",
          "file": 1,
          "line": 2
        }
      }
    },
    {
      "label": "Validate Current Script",
      "type": "shell",
      "command": "shellcheck",
      "args": [
        "${file}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "shellcheck",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^In (.+) line (\\d+):$",
          "file": 1,
          "line": 2
        }
      }
    },
    {
      "label": "Bash Syntax Check",
      "type": "shell",
      "command": "bash",
      "args": [
        "-n",
        "${file}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "PowerShell Script Analysis All",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-NonInteractive",
        "-Command",
        "if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) { try { Install-Module PSScriptAnalyzer -Scope CurrentUser -Force -ErrorAction Stop } catch { Write-Warning 'PSScriptAnalyzer not installed and could not auto-install. Skipping analysis.'; exit 0 } }; Get-ChildItem -Path . -Filter '*.ps1' -Recurse | ForEach-Object { Write-Host \"Analyzing: $($_.FullName)\"; Invoke-ScriptAnalyzer -Path $_.FullName -Settings '.vscode/PSScriptAnalyzerSettings.psd1' }"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": {
        "owner": "powershell",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "PowerShell Script Analysis Current",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-NonInteractive",
        "-Command",
        "Invoke-ScriptAnalyzer -Path '${file}' -Settings '.vscode/PSScriptAnalyzerSettings.psd1'"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "powershell",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "PowerShell Syntax Check",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoProfile",
        "-NonInteractive",
        "-Command",
        "try { $null = [System.Management.Automation.PSParser]::Tokenize((Get-Content '${file}' -Raw), [ref]$null); Write-Host 'Syntax OK' } catch { Write-Error $_.Exception.Message }"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Python Lint All Scripts",
      "type": "shell",
      "command": "find",
      "args": [
        ".",
        "-name",
        "*.py",
        "-not",
        "-path",
        "./.venv/*",
        "-not",
        "-path",
        "./venv/*",
        "-not",
        "-path",
        "./*env/*",
        "-exec",
        "python3",
        "-m",
        "flake8",
        "{}",
        "\\;"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+)\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Python Lint Current Script",
      "type": "shell",
      "command": "python3",
      "args": [
        "-m",
        "flake8",
        "${file}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+)\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Python Type Check All Scripts",
      "type": "shell",
      "command": "find",
      "args": [
        ".",
        "-name",
        "*.py",
        "-not",
        "-path",
        "./.venv/*",
        "-not",
        "-path",
        "./venv/*",
        "-not",
        "-path",
        "./*env/*",
        "-exec",
        "python3",
        "-m",
        "mypy",
        "{}",
        "\\;"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):\\s+(\\w+):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "severity": 3,
          "message": 4
        }
      }
    },
    {
      "label": "Python Type Check Current Script",
      "type": "shell",
      "command": "python3",
      "args": [
        "-m",
        "mypy",
        "${file}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):\\s+(\\w+):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "severity": 3,
          "message": 4
        }
      }
    },
    {
      "label": "Python Format All Scripts",
      "type": "shell",
      "command": "find",
      "args": [
        ".",
        "-name",
        "*.py",
        "-not",
        "-path",
        "./.venv/*",
        "-not",
        "-path",
        "./venv/*",
        "-not",
        "-path",
        "./*env/*",
        "-exec",
        "python3",
        "-m",
        "black",
        "{}",
        "\\;"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      }
    },
    {
      "label": "Python Format Current Script",
      "type": "shell",
      "command": "python3",
      "args": [
        "-m",
        "black",
        "${file}"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Python Syntax Check",
      "type": "shell",
      "command": "python3",
      "args": [
        "-m",
        "py_compile",
        "${file}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Validate All Scripts (Bash + PowerShell + Python)",
      "dependsOrder": "parallel",
      "dependsOn": [
        "Shellcheck All Scripts",
        "PowerShell Script Analysis All",
        "Python Lint All Scripts",
        "Python Type Check All Scripts"
      ],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      }
    },
    {
      "label": "Validate All Scripts (Bash + PowerShell)",
      "dependsOrder": "parallel",
      "dependsOn": [
        "Shellcheck All Scripts",
        "PowerShell Script Analysis All"
      ],
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      }
    }
  ]
}
